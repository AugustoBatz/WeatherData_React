{"ast":null,"code":"import _classCallCheck from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sys515/Documentos/react/clima/src/components/ForecastExtend.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ForecastItem from './ForecastItem';\nimport './style.css';\nimport transformForecast from './../services/transformForecast'; //const days=['Lunes','Martes','Miércoles','Juéves','Viernes']\n//const data={temperature:12,humidity:10,weatherState :'normal',wind:'windds'}\n\nvar api_key = \"648008368e684007ca8939bd96942544\";\nvar url = \"https://api.openweathermap.org/data/2.5/forecast\";\n\nvar ForecastExtended =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForecastExtended, _Component);\n\n  function ForecastExtended() {\n    var _this;\n\n    _classCallCheck(this, ForecastExtended);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForecastExtended).call(this));\n\n    _this.updateCity = function (city) {\n      //fetch or axios\n      var url_forecast = \"\".concat(url, \"?q=\").concat(city, \"&appid=\").concat(api_key);\n      fetch(url_forecast).then(function (data) {\n        return data.json();\n      }).then(function (weather_data) {\n        console.log(weather_data);\n        var forecastData = transformForecast(weather_data);\n        console.log(forecastData);\n\n        _this.setState({\n          forecastData: forecastData\n        });\n      });\n    };\n\n    _this.renderProgress = function () {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"\\\"Cargando Pronostico extendido...\\\"\");\n    };\n\n    _this.state = {\n      forecastData: null\n    };\n    return _this;\n  }\n\n  _createClass(ForecastExtended, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateCity(this.props.city);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.city !== this.props.city) {\n        this.updateCity(nextProps.city);\n      }\n    }\n  }, {\n    key: \"renderForecastItemDays\",\n    value: function renderForecastItemDays(forecastData) {\n      //return \"Render Items\";\n      return forecastData.map(function (forecast) {\n        return React.createElement(ForecastItem, {\n          key: \"\".concat(forecast.weekDay).concat(forecast.hour),\n          weekDay: forecast.weekDay,\n          hour: forecast.hour,\n          data: forecast.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var city = this.props.city;\n      var forecastData = this.state.forecastData;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Pronostico extendido para \", city, React.createElement(\"h2\", {\n        className: \"forecast-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), forecastData ? this.renderForecastItemDays(forecastData) : this.renderProgress());\n    }\n  }]);\n\n  return ForecastExtended;\n}(Component);\n\nForecastExtended.propTypes = {\n  city: PropTypes.string.isRequired\n};\nexport default ForecastExtended;","map":{"version":3,"sources":["/home/sys515/Documentos/react/clima/src/components/ForecastExtend.js"],"names":["React","Component","PropTypes","ForecastItem","transformForecast","api_key","url","ForecastExtended","updateCity","city","url_forecast","fetch","then","data","json","weather_data","console","log","forecastData","setState","renderProgress","state","props","nextProps","map","forecast","weekDay","hour","renderForecastItemDays","propTypes","string","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,aAAP;AACA,OAAOC,iBAAP,MAA8B,iCAA9B,C,CAEA;AACA;;AACA,IAAMC,OAAO,GAAC,kCAAd;AACA,IAAMC,GAAG,GAAE,kDAAX;;IAEMC,gB;;;;;AAEF,8BAAa;AAAA;;AAAA;;AACT;;AADS,UAcbC,UAda,GAcF,UAAAC,IAAI,EAAE;AACX;AACA,UAAMC,YAAY,aAAIJ,GAAJ,gBAAaG,IAAb,oBAA2BJ,OAA3B,CAAlB;AACAM,MAAAA,KAAK,CAACD,YAAD,CAAL,CAAoBE,IAApB,CACI,UAAAC,IAAI;AAAA,eAAGA,IAAI,CAACC,IAAL,EAAH;AAAA,OADR,EAEEF,IAFF,CAGI,UAAAG,YAAY,EAAE;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,YAAMG,YAAY,GAACd,iBAAiB,CAACW,YAAD,CAApC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;;AACA,cAAKC,QAAL,CAAc;AAACD,UAAAA,YAAY,EAAZA;AAAD,SAAd;AAEH,OATL;AAWL,KA5BY;;AAAA,UAwCbE,cAxCa,GAwCE,YAAI;AACf,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAP;AACH,KA1CY;;AAET,UAAKC,KAAL,GAAW;AAACH,MAAAA,YAAY,EAAC;AAAd,KAAX;AAFS;AAGZ;;;;wCAED;AACE,WAAKV,UAAL,CAAgB,KAAKc,KAAL,CAAWb,IAA3B;AAED;;;8CACyBc,S,EAAU;AAChC,UAAGA,SAAS,CAACd,IAAV,KAAiB,KAAKa,KAAL,CAAWb,IAA/B,EAAoC;AAChC,aAAKD,UAAL,CAAgBe,SAAS,CAACd,IAA1B;AACH;AACJ;;;2CAgBsBS,Y,EAAa;AAEhC;AACA,aAAOA,YAAY,CAACM,GAAb,CAAiB,UAAAC,QAAQ;AAAA,eAC5B,oBAAC,YAAD;AACI,UAAA,GAAG,YAAKA,QAAQ,CAACC,OAAd,SAAwBD,QAAQ,CAACE,IAAjC,CADP;AAEI,UAAA,OAAO,EAAEF,QAAQ,CAACC,OAFtB;AAGI,UAAA,IAAI,EAAED,QAAQ,CAACE,IAHnB;AAII,UAAA,IAAI,EAAEF,QAAQ,CAACZ,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAAzB,CAAP;AAOH;;;6BAIO;AAAA,UACGJ,IADH,GACS,KAAKa,KADd,CACGb,IADH;AAAA,UAEGS,YAFH,GAEiB,KAAKG,KAFtB,CAEGH,YAFH;AAIJ,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACmCT,IADnC,EAEI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAKKS,YAAY,GACT,KAAKU,sBAAL,CAA4BV,YAA5B,CADS,GAET,KAAKE,cAAL,EAPR,CAFJ;AAYH;;;;EA7D0BnB,S;;AA+D/BM,gBAAgB,CAACsB,SAAjB,GAA2B;AACvBpB,EAAAA,IAAI,EAACP,SAAS,CAAC4B,MAAV,CAAiBC;AADC,CAA3B;AAGA,eAAexB,gBAAf","sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ForecastItem from './ForecastItem';\nimport './style.css'\nimport transformForecast from './../services/transformForecast'\n\n//const days=['Lunes','Martes','Miércoles','Juéves','Viernes']\n//const data={temperature:12,humidity:10,weatherState :'normal',wind:'windds'}\nconst api_key=\"648008368e684007ca8939bd96942544\";\nconst url =\"https://api.openweathermap.org/data/2.5/forecast\";\n\nclass ForecastExtended extends Component{\n\n    constructor(){\n        super();\n        this.state={forecastData:null}\n    }\n    componentDidMount()\n    {\n      this.updateCity(this.props.city);\n\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps.city!==this.props.city){\n            this.updateCity(nextProps.city);\n        }\n    }\n    updateCity=city=>{\n          //fetch or axios\n          const url_forecast=`${url}?q=${city}&appid=${api_key}`;\n          fetch(url_forecast).then(\n              data=>(data.json())\n          ).then(\n              weather_data=>{\n                  console.log(weather_data);\n                  const forecastData=transformForecast(weather_data);\n                  console.log(forecastData);\n                  this.setState({forecastData});\n  \n              }\n          );\n    }\n    renderForecastItemDays(forecastData){\n\n        //return \"Render Items\";\n        return forecastData.map(forecast=>(\n            <ForecastItem \n                key={`${forecast.weekDay}${forecast.hour}`}\n                weekDay={forecast.weekDay} \n                hour={forecast.hour} \n                data={forecast.data}/>));\n        \n    }\n    renderProgress=()=>{\n        return <h3>\"Cargando Pronostico extendido...\"</h3>;\n    }\n    render(){\n        const {city}=this.props;\n        const {forecastData}=this.state;\n\n        return (\n           \n            <div> \n                    Pronostico extendido para {city}\n                <h2 className='forecast-title'>\n                </h2>\n\n                {forecastData ? \n                    this.renderForecastItemDays(forecastData):\n                    this.renderProgress()}\n            </div>\n        );\n    }\n}\nForecastExtended.propTypes={\n    city:PropTypes.string.isRequired,\n}\nexport default ForecastExtended;"]},"metadata":{},"sourceType":"module"}