{"ast":null,"code":"import _classCallCheck from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sys515/Documentos/react/clima/src/components/ForecastExtend.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ForecastItem from './ForecastItem';\nimport './style.css';\nimport transformForecast from './../services/transformForecast'; //const days=['Lunes','Martes','Miércoles','Juéves','Viernes']\n//const data={temperature:12,humidity:10,weatherState :'normal',wind:'windds'}\n\nvar api_key = \"648008368e684007ca8939bd96942544\";\nvar url = \"https://api.openweathermap.org/data/2.5/forecast\";\n\nvar ForecastExtended =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForecastExtended, _Component);\n\n  function ForecastExtended() {\n    var _this;\n\n    _classCallCheck(this, ForecastExtended);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForecastExtended).call(this));\n\n    _this.renderProgress = function () {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"\\\"Cargando Pronostico extendido...\\\"\");\n    };\n\n    _this.state = {\n      forecastData: null\n    };\n    return _this;\n  }\n\n  _createClass(ForecastExtended, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //fetch or axios\n      var url_forecast = \"\".concat(url, \"?q=\").concat(this.props.city, \"&appid=\").concat(api_key);\n      fetch(url_forecast).then(function (data) {\n        return data.json();\n      }).then(function (weather_data) {\n        console.log(weather_data);\n        var forecastData = transformForecast(weather_data);\n        console.log(forecastData);\n\n        _this2.setState({\n          forecastData: forecastData\n        });\n      });\n    }\n  }, {\n    key: \"renderForecastItemDays\",\n    value: function renderForecastItemDays(forecastData) {\n      //return \"Render Items\";\n      return forecastData.map(function (forecast) {\n        return React.createElement(ForecastItem, {\n          key: \"\".concat(forecast.weekDay).concat(forecast.hour),\n          weekDay: forecast.weekDay,\n          hour: forecast.hour,\n          data: forecast.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var city = this.props.city;\n      var forecastData = this.state.forecastData;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Pronostico extendido para \", city, React.createElement(\"h2\", {\n        className: \"forecast-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), forecastData ? this.renderForecastItemDays(forecastData) : this.renderProgress());\n    }\n  }]);\n\n  return ForecastExtended;\n}(Component);\n\nForecastExtended.propTypes = {\n  city: PropTypes.string.isRequired\n};\nexport default ForecastExtended;","map":{"version":3,"sources":["/home/sys515/Documentos/react/clima/src/components/ForecastExtend.js"],"names":["React","Component","PropTypes","ForecastItem","transformForecast","api_key","url","ForecastExtended","renderProgress","state","forecastData","url_forecast","props","city","fetch","then","data","json","weather_data","console","log","setState","map","forecast","weekDay","hour","renderForecastItemDays","propTypes","string","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,aAAP;AACA,OAAOC,iBAAP,MAA8B,iCAA9B,C,CAEA;AACA;;AACA,IAAMC,OAAO,GAAC,kCAAd;AACA,IAAMC,GAAG,GAAE,kDAAX;;IAEMC,gB;;;;;AAEF,8BAAa;AAAA;;AAAA;;AACT;;AADS,UAgCbC,cAhCa,GAgCE,YAAI;AACf,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAP;AACH,KAlCY;;AAET,UAAKC,KAAL,GAAW;AAACC,MAAAA,YAAY,EAAC;AAAd,KAAX;AAFS;AAGZ;;;;wCAED;AAAA;;AACI;AACA,UAAMC,YAAY,aAAIL,GAAJ,gBAAa,KAAKM,KAAL,CAAWC,IAAxB,oBAAsCR,OAAtC,CAAlB;AACAS,MAAAA,KAAK,CAACH,YAAD,CAAL,CAAoBI,IAApB,CACI,UAAAC,IAAI;AAAA,eAAGA,IAAI,CAACC,IAAL,EAAH;AAAA,OADR,EAEEF,IAFF,CAGI,UAAAG,YAAY,EAAE;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,YAAMR,YAAY,GAACN,iBAAiB,CAACc,YAAD,CAApC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;;AACA,QAAA,MAAI,CAACW,QAAL,CAAc;AAACX,UAAAA,YAAY,EAAZA;AAAD,SAAd;AAEH,OATL;AAYH;;;2CACsBA,Y,EAAa;AAEhC;AACA,aAAOA,YAAY,CAACY,GAAb,CAAiB,UAAAC,QAAQ;AAAA,eAC5B,oBAAC,YAAD;AACI,UAAA,GAAG,YAAKA,QAAQ,CAACC,OAAd,SAAwBD,QAAQ,CAACE,IAAjC,CADP;AAEI,UAAA,OAAO,EAAEF,QAAQ,CAACC,OAFtB;AAGI,UAAA,IAAI,EAAED,QAAQ,CAACE,IAHnB;AAII,UAAA,IAAI,EAAEF,QAAQ,CAACP,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAAzB,CAAP;AAOH;;;6BAIO;AAAA,UACGH,IADH,GACS,KAAKD,KADd,CACGC,IADH;AAAA,UAEGH,YAFH,GAEiB,KAAKD,KAFtB,CAEGC,YAFH;AAIJ,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACmCG,IADnC,EAEI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAKKH,YAAY,GACT,KAAKgB,sBAAL,CAA4BhB,YAA5B,CADS,GAET,KAAKF,cAAL,EAPR,CAFJ;AAYH;;;;EArD0BP,S;;AAuD/BM,gBAAgB,CAACoB,SAAjB,GAA2B;AACvBd,EAAAA,IAAI,EAACX,SAAS,CAAC0B,MAAV,CAAiBC;AADC,CAA3B;AAGA,eAAetB,gBAAf","sourcesContent":["import React,{Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ForecastItem from './ForecastItem';\nimport './style.css'\nimport transformForecast from './../services/transformForecast'\n\n//const days=['Lunes','Martes','Miércoles','Juéves','Viernes']\n//const data={temperature:12,humidity:10,weatherState :'normal',wind:'windds'}\nconst api_key=\"648008368e684007ca8939bd96942544\";\nconst url =\"https://api.openweathermap.org/data/2.5/forecast\";\n\nclass ForecastExtended extends Component{\n\n    constructor(){\n        super();\n        this.state={forecastData:null}\n    }\n    componentDidMount()\n    {\n        //fetch or axios\n        const url_forecast=`${url}?q=${this.props.city}&appid=${api_key}`;\n        fetch(url_forecast).then(\n            data=>(data.json())\n        ).then(\n            weather_data=>{\n                console.log(weather_data);\n                const forecastData=transformForecast(weather_data);\n                console.log(forecastData);\n                this.setState({forecastData});\n\n            }\n        );\n\n    }\n    renderForecastItemDays(forecastData){\n\n        //return \"Render Items\";\n        return forecastData.map(forecast=>(\n            <ForecastItem \n                key={`${forecast.weekDay}${forecast.hour}`}\n                weekDay={forecast.weekDay} \n                hour={forecast.hour} \n                data={forecast.data}/>));\n        \n    }\n    renderProgress=()=>{\n        return <h3>\"Cargando Pronostico extendido...\"</h3>;\n    }\n    render(){\n        const {city}=this.props;\n        const {forecastData}=this.state;\n\n        return (\n           \n            <div> \n                    Pronostico extendido para {city}\n                <h2 className='forecast-title'>\n                </h2>\n\n                {forecastData ? \n                    this.renderForecastItemDays(forecastData):\n                    this.renderProgress()}\n            </div>\n        );\n    }\n}\nForecastExtended.propTypes={\n    city:PropTypes.string.isRequired,\n}\nexport default ForecastExtended;"]},"metadata":{},"sourceType":"module"}