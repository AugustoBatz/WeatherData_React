{"ast":null,"code":"import _classCallCheck from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sys515/Documentos/react/clima/src/components/WeatherLocation/index.js\";\nimport React, { Component } from 'react';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport { RAIN, CLOUD } from '../../constants/weathers'; //648008368e684007ca8939bd96942544\n\nimport './style.css';\nvar location = \"London,uk\";\nvar api_key = \"648008368e684007ca8939bd96942544\";\nvar api_weather = \"https://\\napi.openweathermap.org/data/2.5/weather?q=\".concat(location, \",uk&appid=\").concat(api_key);\nvar data = {\n  temperature: 26,\n  weatherstate: RAIN,\n  humidity: 11,\n  wind: '22m/s'\n};\n/*const data2={\n    temperature:55,\n    weatherstate:WINDY,\n    humidity:15,\n    wind:'55m/s',\n\n};*/\n\nvar WeatherLocation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherLocation, _Component);\n\n  function WeatherLocation() {\n    var _this;\n\n    _classCallCheck(this, WeatherLocation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WeatherLocation).call(this));\n\n    _this.getWeatherState = function (weather_data) {\n      return CLOUD;\n    };\n\n    _this.getData = function (weather_data) {\n      var _this$weather_data$ma = _this.weather_data.main,\n          humidity = _this$weather_data$ma.humidity,\n          temp = _this$weather_data$ma.temp;\n      var speed = _this.weather_data.wind.speed;\n\n      var weatherState = _this.getWeatherState(_this.weather_data);\n\n      var data = {\n        humidity: humidity,\n        temperature: temp,\n        weatherState: weatherState,\n        wind: \"\".concat(speed, \" m/s\")\n      };\n      return data;\n    };\n\n    _this.handleUpdateClick = function () {\n      fetch(api_weather).then(function (data) {\n        console.log(data);\n        return data.json();\n      }).then(function (weather_data) {\n        var data = _this.getData(weather_data);\n\n        _this.setState({\n          data: data\n        });\n\n        console.log(weather_data);\n        debugger;\n      });\n      /*\n      this.setState({\n          data:data2\n      });*/\n    };\n\n    _this.render = function () {\n      var _this$state = _this.state,\n          city = _this$state.city,\n          data = _this$state.data;\n      return React.createElement(\"div\", {\n        className: \"weatherLocationCont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Location, {\n        city: city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(WeatherData, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: _this.handleUpdateClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Actualizar\"));\n    };\n\n    _this.state = {\n      city: 'Buenos Aires',\n      data: data\n    };\n    return _this;\n  }\n\n  return WeatherLocation;\n}(Component);\n\nexport default WeatherLocation;","map":{"version":3,"sources":["/home/sys515/Documentos/react/clima/src/components/WeatherLocation/index.js"],"names":["React","Component","Location","WeatherData","RAIN","CLOUD","location","api_key","api_weather","data","temperature","weatherstate","humidity","wind","WeatherLocation","getWeatherState","weather_data","getData","main","temp","speed","weatherState","handleUpdateClick","fetch","then","console","log","json","setState","render","state","city"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAOC,IAAP,EAAaC,KAAb,QAAyB,0BAAzB,C,CAEA;;AACA,OAAO,aAAP;AACA,IAAMC,QAAQ,GAAC,WAAf;AACA,IAAMC,OAAO,GAAC,kCAAd;AACA,IAAMC,WAAW,iEAC2BF,QAD3B,uBACgDC,OADhD,CAAjB;AAEA,IAAME,IAAI,GAAC;AACPC,EAAAA,WAAW,EAAC,EADL;AAEPC,EAAAA,YAAY,EAACP,IAFN;AAGPQ,EAAAA,QAAQ,EAAC,EAHF;AAIPC,EAAAA,IAAI,EAAC;AAJE,CAAX;AAOA;;;;;;;;IAOMC,e;;;;;AAEF,6BACA;AAAA;;AAAA;;AACI;;AADJ,UAQAC,eARA,GAQgB,UAACC,YAAD,EAAgB;AAC5B,aAAOX,KAAP;AACH,KAVD;;AAAA,UAaAY,OAbA,GAaQ,UAAAD,YAAY,EAAE;AAAA,kCACI,MAAKA,YAAL,CAAkBE,IADtB;AAAA,UACXN,QADW,yBACXA,QADW;AAAA,UACFO,IADE,yBACFA,IADE;AAAA,UAEXC,KAFW,GAEJ,MAAKJ,YAAL,CAAkBH,IAFd,CAEXO,KAFW;;AAGlB,UAAMC,YAAY,GAAC,MAAKN,eAAL,CAAqB,MAAKC,YAA1B,CAAnB;;AACA,UAAMP,IAAI,GAAC;AACPG,QAAAA,QAAQ,EAARA,QADO;AAEPF,QAAAA,WAAW,EAACS,IAFL;AAGPE,QAAAA,YAAY,EAAZA,YAHO;AAIPR,QAAAA,IAAI,YAAKO,KAAL;AAJG,OAAX;AAOA,aAAOX,IAAP;AACH,KAzBD;;AAAA,UA0BAa,iBA1BA,GA0BkB,YAAI;AAClBC,MAAAA,KAAK,CAACf,WAAD,CAAL,CAAmBgB,IAAnB,CAAwB,UAAAf,IAAI,EAAE;AAE1BgB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA,eAAOA,IAAI,CAACkB,IAAL,EAAP;AACH,OAJD,EAIGH,IAJH,CAIQ,UAAAR,YAAY,EAAE;AAClB,YAAMP,IAAI,GAAC,MAAKQ,OAAL,CAAaD,YAAb,CAAX;;AACA,cAAKY,QAAL,CAAc;AAACnB,UAAAA,IAAI,EAAJA;AAAD,SAAd;;AAEAgB,QAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACA;AAEH,OAXD;AAaA;;;;AAIH,KA5CD;;AAAA,UA6CAa,MA7CA,GA6CO,YAAI;AAAA,wBACW,MAAKC,KADhB;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACKtB,IADL,eACKA,IADL;AAEP,aACA;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEsB,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEtB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGA;AAAQ,QAAA,OAAO,EAAE,MAAKa,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHA,CADA;AAOH,KAtDD;;AAEI,UAAKQ,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC,cADI;AAETtB,MAAAA,IAAI,EAACA;AAFI,KAAb;AAFJ;AAOC;;;EAVyBR,S;;AA2D9B,eAAea,eAAf","sourcesContent":["import React,{ Component } from 'react';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport{RAIN, CLOUD} from '../../constants/weathers';\n\n//648008368e684007ca8939bd96942544\nimport './style.css';\nconst location=\"London,uk\";\nconst api_key=\"648008368e684007ca8939bd96942544\";\nconst api_weather =`https://\napi.openweathermap.org/data/2.5/weather?q=${location},uk&appid=${api_key}`;\nconst data={\n    temperature:26,\n    weatherstate:RAIN,\n    humidity:11,\n    wind:'22m/s',\n\n};\n/*const data2={\n    temperature:55,\n    weatherstate:WINDY,\n    humidity:15,\n    wind:'55m/s',\n\n};*/\nclass WeatherLocation extends Component{\n\n    constructor()\n    {\n        super();\n        this.state = {\n            city:'Buenos Aires',\n            data:data\n        };\n        \n    }\n    getWeatherState=(weather_data)=>{\n        return CLOUD;\n    }\n\n\n    getData=weather_data=>{\n        const {humidity,temp}=this.weather_data.main;\n        const {speed}=this.weather_data.wind;\n        const weatherState=this.getWeatherState(this.weather_data);\n        const data={\n            humidity,\n            temperature:temp,\n            weatherState,\n            wind: `${speed} m/s`,\n\n        }\n        return data;\n    }\n    handleUpdateClick=()=>{\n        fetch(api_weather).then(data=>{\n\n            console.log(data);\n            return data.json();\n        }).then(weather_data=>{\n            const data=this.getData(weather_data);\n            this.setState({data});\n\n            console.log(weather_data);\n            debugger;\n\n        });\n\n        /*\n        this.setState({\n            data:data2\n        });*/\n    }\n    render=()=>{\n        const {city,data}=this.state;\n        return(\n        <div className='weatherLocationCont'>\n        <Location city={city}/>\n        <WeatherData data={data}/>\n        <button onClick={this.handleUpdateClick}>Actualizar</button>\n        </div>\n        );\n    };\n}\nexport default WeatherLocation; "]},"metadata":{},"sourceType":"module"}