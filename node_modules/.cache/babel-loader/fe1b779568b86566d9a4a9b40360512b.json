{"ast":null,"code":"import _classCallCheck from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sys515/Documentos/react/clima/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sys515/Documentos/react/clima/src/components/WeatherLocation/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport transformWeather from './../../services/transformWeather';\nimport CircularProgress from 'material-ui/CircularProgress'; //import{RAIN, CLOUD} from './../../constants/weathers';\n//648008368e684007ca8939bd96942544\n\nimport './style.css';\nvar api_key = \"648008368e684007ca8939bd96942544\";\n/*const data={\n    temperature:26,\n    weatherstate:RAIN,\n    humidity:11,\n    wind:'22m/s',\n\n};*/\n\n/*const data2={\n    temperature:55,\n    weatherstate:WINDY,\n    humidity:15,\n    wind:'55m/s',\n\n};*/\n\nvar WeatherLocation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherLocation, _Component);\n\n  function WeatherLocation(_ref) {\n    var _this;\n\n    var _city = _ref.city;\n\n    _classCallCheck(this, WeatherLocation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WeatherLocation).call(this));\n\n    _this.handleUpdateClick = function () {\n      /*\n      this.setState({\n          data:data2\n      });*/\n    };\n\n    _this.render = function () {\n      console.log(\"render\");\n      var onWeatherLocationClick = _this.props.onWeatherLocationClick;\n      var _this$state = _this.state,\n          city = _this$state.city,\n          data = _this$state.data;\n      return React.createElement(\"div\", {\n        className: \"weatherLocationCont\",\n        onClick: onWeatherLocationClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Location, {\n        city: city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), data ? React.createElement(WeatherData, {\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }) : React.createElement(CircularProgress, {\n        size: 60,\n        thickness: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    };\n\n    _this.state = {\n      city: _city,\n      data: null\n    };\n    console.log(\"contructor\");\n    return _this;\n  }\n\n  _createClass(WeatherLocation, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var city = this.state.city;\n      var api_weather = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(api_key);\n      fetch(api_weather).then(function (data) {\n        console.log(data);\n        return data.json();\n      }).then(function (weather_data) {\n        var data = transformWeather(weather_data);\n\n        _this2.setState({\n          data: data\n        });\n      });\n      console.log(\"Actualizado\");\n    }\n  }]);\n\n  return WeatherLocation;\n}(Component);\n\nWeatherLocation.propTypes = {\n  city: PropTypes.string.isRequired,\n  onWeatherLocationClick: PropTypes.func\n};\nexport default WeatherLocation;","map":{"version":3,"sources":["/home/sys515/Documentos/react/clima/src/components/WeatherLocation/index.js"],"names":["React","Component","PropTypes","Location","WeatherData","transformWeather","CircularProgress","api_key","WeatherLocation","city","handleUpdateClick","render","console","log","onWeatherLocationClick","props","state","data","api_weather","fetch","then","json","weather_data","setState","propTypes","string","isRequired","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,gBAAP,MAA6B,8BAA7B,C,CACA;AAEA;;AACA,OAAO,aAAP;AACA,IAAMC,OAAO,GAAC,kCAAd;AAEA;;;;;;;;AAOA;;;;;;;;IAOMC,e;;;;;AAEF,iCACA;AAAA;;AAAA,QADaC,KACb,QADaA,IACb;;AAAA;;AACI;;AADJ,UAWAC,iBAXA,GAWkB,YAAI;AAElB;;;;AAIH,KAjBD;;AAAA,UAqCAC,MArCA,GAqCO,YAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AADO,UAEAC,sBAFA,GAEwB,MAAKC,KAF7B,CAEAD,sBAFA;AAAA,wBAGW,MAAKE,KAHhB;AAAA,UAGAP,IAHA,eAGAA,IAHA;AAAA,UAGKQ,IAHL,eAGKA,IAHL;AAIP,aACA;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAqC,QAAA,OAAO,EAAEH,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEL,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAECQ,IAAI,GAAG,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACJ,oBAAC,gBAAD;AAAkB,QAAA,IAAI,EAAE,EAAxB;AAA4B,QAAA,SAAS,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CADA;AASH,KAlDD;;AAEI,UAAKD,KAAL,GAAa;AACTP,MAAAA,IAAI,EAAJA,KADS;AAETQ,MAAAA,IAAI,EAAC;AAFI,KAAb;AAKQL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAPZ;AAUS;;;;yCASY;AAAA;;AAAA,UACVJ,IADU,GACJ,KAAKO,KADD,CACVP,IADU;AAEjB,UAAMS,WAAW,+DAAuDT,IAAvD,oBAAqEF,OAArE,CAAjB;AACAY,MAAAA,KAAK,CAACD,WAAD,CAAL,CAAmBE,IAAnB,CAAwB,UAAAH,IAAI,EAAE;AAE1BL,QAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,eAAOA,IAAI,CAACI,IAAL,EAAP;AACH,OAJD,EAIGD,IAJH,CAIQ,UAAAE,YAAY,EAAE;AAClB,YAAML,IAAI,GAACZ,gBAAgB,CAACiB,YAAD,CAA3B;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAACN,UAAAA,IAAI,EAAJA;AAAD,SAAd;AAIH,OAVD;AAWAL,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEH;;;;EAtCyBZ,S;;AAuD9BO,eAAe,CAACgB,SAAhB,GAA0B;AACtBf,EAAAA,IAAI,EAACP,SAAS,CAACuB,MAAV,CAAiBC,UADA;AAEtBZ,EAAAA,sBAAsB,EAACZ,SAAS,CAACyB;AAFX,CAA1B;AAIA,eAAenB,eAAf","sourcesContent":["import React,{ Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport transformWeather from './../../services/transformWeather';\nimport CircularProgress from 'material-ui/CircularProgress';\n//import{RAIN, CLOUD} from './../../constants/weathers';\n\n//648008368e684007ca8939bd96942544\nimport './style.css';\nconst api_key=\"648008368e684007ca8939bd96942544\";\n\n/*const data={\n    temperature:26,\n    weatherstate:RAIN,\n    humidity:11,\n    wind:'22m/s',\n\n};*/\n/*const data2={\n    temperature:55,\n    weatherstate:WINDY,\n    humidity:15,\n    wind:'55m/s',\n\n};*/\nclass WeatherLocation extends Component{\n\n    constructor({city})\n    {\n        super();\n        this.state = {\n            city,\n            data:null\n\n        };\n                console.log(\"contructor\");\n\n                \n            }\n    handleUpdateClick=()=>{\n        \n        /*\n        this.setState({\n            data:data2\n        });*/\n    }\n    \n    componentWillMount() {\n        const {city}=this.state;\n        const api_weather =`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${api_key}`;\n        fetch(api_weather).then(data=>{\n\n            console.log(data);\n            return data.json();\n        }).then(weather_data=>{\n            const data=transformWeather(weather_data);\n            this.setState({data});\n\n            \n\n        });\n        console.log(\"Actualizado\");\n        \n    }\n    \n    render=()=>{\n        console.log(\"render\");\n        const {onWeatherLocationClick}=this.props;\n        const {city,data}=this.state;\n        return(\n        <div className='weatherLocationCont' onClick={onWeatherLocationClick}>\n        <Location city={city}/>\n        {data ? <WeatherData data={data}/>: \n         <CircularProgress size={60} thickness={7} />\n        } \n        \n        </div>\n        );\n    };\n}\nWeatherLocation.propTypes={\n    city:PropTypes.string.isRequired,\n    onWeatherLocationClick:PropTypes.func,\n}\nexport default WeatherLocation; "]},"metadata":{},"sourceType":"module"}